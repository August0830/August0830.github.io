<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Map of Augustus&#39;s Soul</title>
  <icon>https://august0830.github.io/icon.png</icon>
  
  <link href="https://august0830.github.io/atom.xml" rel="self"/>
  
  <link href="https://august0830.github.io/"/>
  <updated>2023-09-16T08:17:58.960Z</updated>
  <id>https://august0830.github.io/</id>
  
  <author>
    <name>Augustus</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>从一台计算机到Kubernetes</title>
    <link href="https://august0830.github.io/post/56c20e9/"/>
    <id>https://august0830.github.io/post/56c20e9/</id>
    <published>2023-09-16T07:59:58.000Z</published>
    <updated>2023-09-16T08:17:58.960Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;前言：&quot;&gt;&lt;a href=&quot;#前言：&quot; class=&quot;headerlink&quot; title=&quot;前言：&quot;&gt;&lt;/a&gt;前言：&lt;/h2&gt;&lt;p&gt;在学校的时候对Kubernetes的向往来自于对“自动编排”这一愿景的向往。实际工作中接触到以后，发现各种知识扑面而来。比起直接深入细节，弄明白为什么需要Kubenetes的这些组件，为什么这些组件之间是如此互动的等问题，能够帮助我理清楚头绪。谨以此作为学习记录。&lt;/p&gt;
&lt;h2 id=&quot;为什么需要Kubernetes？&quot;&gt;&lt;a href=&quot;#为什么需要Kubernetes？&quot; class=&quot;headerlink&quot; title=&quot;为什么需要Kubernetes？&quot;&gt;&lt;/a&gt;为什么需要Kubernetes？&lt;/h2&gt;&lt;p&gt;回到我还在学校的时候，学生信息管理系统 （aka 选课系统）属实是人手一个的项目。问题来了，如果学校在同学们的吐槽声中，真的决定选中你写的学生选课信息管理系统作为升级版本，原本在你电脑里运行的二进制文件，真的能满足同学们的需求吗？&lt;/p&gt;
&lt;p&gt;说不定经过一番折腾真的可以。首先，我们来尝试考虑同学们在选课的需求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;准确性：选课信息要准确，不同同学之间的课程信息不能弄混&lt;/li&gt;
&lt;li&gt;可靠性：大量同学一起选课的时候不能崩&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;再尝试考虑学校的需求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;充分利用资源：除了选课高峰期，其他时间，系统不应该占据过多的服务器资源，以减少学校开支&lt;/li&gt;
&lt;li&gt;减少人工干预的成本：选课期间老师们大多忙于解答选课问题或者处理排课冲突等问题，没有过多精力关注选课系统本身的问题&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;原本在课上写的代码可能包括如下部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Gateway：系统前端，也负责转发流量到后端的部分&lt;/li&gt;
&lt;li&gt;Admin：身份验证&lt;/li&gt;
&lt;li&gt;Database：存储选课信息&lt;/li&gt;
&lt;li&gt;Controller：对选课逻辑等进行检查、处理（比如需要修满本系学分，同一个学生不同课程时间有重叠需要调整或者提醒等）&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://august0830.github.io/categories/Tech/"/>
    
    
    <category term="Kubernetes" scheme="https://august0830.github.io/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Smooth like Butter：如何从高中丝滑过渡到大学</title>
    <link href="https://august0830.github.io/post/df092d39/"/>
    <id>https://august0830.github.io/post/df092d39/</id>
    <published>2023-07-01T06:53:39.000Z</published>
    <updated>2023-07-01T07:01:48.310Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;从独木桥到旷野&quot;&gt;&lt;a href=&quot;#从独木桥到旷野&quot; class=&quot;headerlink&quot; title=&quot;从独木桥到旷野&quot;&gt;&lt;/a&gt;从独木桥到旷野&lt;/h2&gt;&lt;p&gt;如果说高中是只需要埋头前进勇争上游的独木桥，那么大学就是一片未知的旷野。&lt;/p&gt;
&lt;p&gt;前几天接到高中朋友的提问，让我介绍下NJUSE的情况。我一时哽住，说实话谈论一个院系不可能绕开讨论就读体验，仔细想想四年时间里我有收获也有不满，万般滋味实在难以总结成为最后结论。我能提供的靠谱信息，其实只有相对客观的事实。&lt;/p&gt;
&lt;p&gt;但是我又很清楚的知道，对于大部分刚刚离开高考体系的同学们来说，认识到“&lt;strong&gt;事实+价值=决策&lt;/strong&gt;”的人寥寥无几，大家都习惯了给定方向向前冲，但是从填志愿开始，大学就展现了它截然不同的特征。所以我写了这篇文章。&lt;/p&gt;
&lt;p&gt;无论选择哪所学校，哪个院系，它都是万般可能性中的一种，高考的目标是考一个好分数，这是确定的；但是在大学里，从选专业到选课再到最终决定毕业去向，选择多得眼花缭乱。&lt;strong&gt;没有绝对意义上最好的选择，只有对做选择的个体来说最想要、最适合、最不会后悔的选择&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;其实高考也是如此，只是高压的应试教育体系不允许有不同的声音。有人觉得按照老师的指导一路前冲只考虑如何高分是无忧无虑的，就会有人觉得单一的评价体系压抑了自己的多种可能性。上大学这件事，乐观点说，我们终于拥有了更多的选择，可以尝试不同的可能性；对于不喜欢选择的同学，我只能很抱歉地说，你已经被推向了这个花花世界，你当然可以逃避，可以继续躲在师长的羽翼下，但是现实是，&lt;strong&gt;你是那个承担选择的后果的人&lt;/strong&gt;，与其为别人的决定买单，为什么不一开始就按照自己的心意选择呢？途中可能会走弯路，可能会后悔，但是这全都是你的选择、你的经历、你的人生。&lt;/p&gt;
&lt;p&gt;所以从填志愿开始，自己决定要奔向旷野何方吧。&lt;/p&gt;
&lt;h2 id=&quot;所有人的建议，都是有色眼镜后的所见&quot;&gt;&lt;a href=&quot;#所有人的建议，都是有色眼镜后的所见&quot; class=&quot;headerlink&quot; title=&quot;所有人的建议，都是有色眼镜后的所见&quot;&gt;&lt;/a&gt;所有人的建议，都是有色眼镜后的所见&lt;/h2&gt;&lt;p&gt;既然高中埋头赶路的模式已经不适合大学，那么如何在大学里做决定呢？&lt;/p&gt;
&lt;p&gt;首先，得要有这个意识。例如说，可能会有辅导员告诉你只要好好搞绩点做德育活动就能保研，可是有可能到9月保研季规则改动，或是到时候才发现原来有些思政活动对导师而言屁用没有——只有自己搜集信息，才能得出属于自己的判断，而不是人云亦云，把选择权无形的拱手相让。&lt;/p&gt;</summary>
    
    
    
    <category term="Thoughts" scheme="https://august0830.github.io/categories/Thoughts/"/>
    
    
    <category term="Career" scheme="https://august0830.github.io/tags/Career/"/>
    
  </entry>
  
  <entry>
    <title>四年本科回顾：Dos and Don&#39;ts</title>
    <link href="https://august0830.github.io/post/62f70775/"/>
    <id>https://august0830.github.io/post/62f70775/</id>
    <published>2023-06-25T03:13:14.000Z</published>
    <updated>2023-06-25T03:27:33.988Z</updated>
    
    
    <summary type="html">&lt;p&gt;四年前入学的时候应该想不到自己真的能带着两段实习和一个符合选择CS初心的预期的工作offer毕业。如果能重来一遍，有些事情我希望我能早点做到，或是继续保持，或是不要做。在这篇文章里简单写写。&lt;/p&gt;
&lt;h2 id=&quot;早点做到&quot;&gt;&lt;a href=&quot;#早点做到&quot; class=&quot;headerlink&quot; title=&quot;早点做到&quot;&gt;&lt;/a&gt;早点做到&lt;/h2&gt;&lt;h3 id=&quot;多多提问&quot;&gt;&lt;a href=&quot;#多多提问&quot; class=&quot;headerlink&quot; title=&quot;多多提问&quot;&gt;&lt;/a&gt;多多提问&lt;/h3&gt;&lt;p&gt;对内向型人来说提问可能是困难的，如果担心自己在提问中被看不起，提问就会变得更加困难。&lt;/p&gt;
&lt;p&gt;但是对于新手来说，只要掌握了&lt;a href=&quot;https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md&quot;&gt;正确的提问方法&lt;/a&gt;就No Stupid Question。同时应该解构“提问”这一动作的含义：提问不代表你能力不行，不假思索的提问才会影响能力的成长，经过思考以后求助才能帮助你摆脱目前的困境。&lt;/p&gt;
&lt;p&gt;可能大一早点想通这点，绩点就不至于如此凄惨了（&lt;/p&gt;
&lt;h3 id=&quot;喜欢就享受，不喜欢就趁早摆脱&quot;&gt;&lt;a href=&quot;#喜欢就享受，不喜欢就趁早摆脱&quot; class=&quot;headerlink&quot; title=&quot;喜欢就享受，不喜欢就趁早摆脱&quot;&gt;&lt;/a&gt;喜欢就享受，不喜欢就趁早摆脱&lt;/h3&gt;&lt;p&gt;大二的时候一度非常怀疑自己的选择，但是这个专业和学校又的确是我自己选的，不出于所谓的就业前景、不出于所谓的热门，就只是我的兴趣结合我需要的现实资源的考量。后来我尝试着捕捉那些让我感到发自内心快乐的时刻，我终于发现，原来我讨厌的不是学习CS的过程，是不合理的体系设计。&lt;/p&gt;
&lt;p&gt;想明白一点以后，我开始寻找新的可能性，比如不读研尝试找工，也如愿摆脱了让我身心俱疲的环境与节奏，找到让我舒适的新的选项。享受快乐的瞬间；对折磨的时刻，不要坐以待毙，跑起来！&lt;/p&gt;
&lt;h2 id=&quot;继续保持&quot;&gt;&lt;a href=&quot;#继续保持&quot; class=&quot;headerlink&quot; title=&quot;继续保持&quot;&gt;&lt;/a&gt;继续保持&lt;/h2&gt;</summary>
    
    
    
    <category term="Thoughts" scheme="https://august0830.github.io/categories/Thoughts/"/>
    
    
    <category term="Career" scheme="https://august0830.github.io/tags/Career/"/>
    
  </entry>
  
  <entry>
    <title>毕设实录</title>
    <link href="https://august0830.github.io/post/7d3f17d0/"/>
    <id>https://august0830.github.io/post/7d3f17d0/</id>
    <published>2023-06-17T07:47:38.000Z</published>
    <updated>2023-06-17T07:59:06.317Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;关于选题&quot;&gt;&lt;a href=&quot;#关于选题&quot; class=&quot;headerlink&quot; title=&quot;关于选题&quot;&gt;&lt;/a&gt;关于选题&lt;/h2&gt;&lt;p&gt;事实上在做毕设之前我从来没有接触过机器学习相关的科研或者项目，实习做的也不是这个方向。是在和导师沟通的过程中，觉得这个题目有点意思，加上之前没怎么做过研究，于是脑子一热答应选了这个如导师所言”有挑战性”的选题。&lt;/p&gt;
&lt;p&gt;虽然做的过程中经常要死要活，也一度非常迷茫自己到底能不能做完，但是因为最开始的确是对选题感兴趣，所以倒也有不少苦中作乐或者惊觉“Eureka”的时刻。毕竟本科生比较少会在毕设上被为难，所以抱着“只要认真做了一定能过”的心态，去做些自己感兴趣的尝试，也不枉费投入的时间与精力。&lt;/p&gt;
&lt;h2 id=&quot;从零开始快速恶补机器学习——面向毕设学习机器学习&quot;&gt;&lt;a href=&quot;#从零开始快速恶补机器学习——面向毕设学习机器学习&quot; class=&quot;headerlink&quot; title=&quot;从零开始快速恶补机器学习——面向毕设学习机器学习&quot;&gt;&lt;/a&gt;从零开始快速恶补机器学习——面向毕设学习机器学习&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;系统性的阅读：找一本教材。能动手跟着做练习最好，如果时间有限，其实重点熟悉与自己的毕设有关的方面就够了，其他的反正一时半会用不上，用到了再说。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;论坛：（eg：Reddit，Stackoverflow）找更亲民、短平快、面向具体毕设主题的材料。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Chatgpt：学习一些基本的概念，或者是复习。注意：GPT只能说人话，不能保证正确，留个心眼，在实践中验证。对于基础知识，大概率材料已经在它的训练数据里，所以拿不准的时候还是会问它。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为我的毕设本质做的是优化问题，所以针对毕设问题来学习对我来说就是：关注性能优化，可以少看公式，多关注性能衡量指标的原理，具体方法的原理先放一放。&lt;/p&gt;
&lt;h2 id=&quot;阅读文献&quot;&gt;&lt;a href=&quot;#阅读文献&quot; class=&quot;headerlink&quot; title=&quot;阅读文献&quot;&gt;&lt;/a&gt;阅读文献&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Zetero：读文献的时候划重点，做批注，对文献类型分类，导出引用都很方便。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chatpdf.com/&quot;&gt;ChatPDF - Chat with any PDF!&lt;/a&gt;：在读文献初期，对所做领域所知甚少的时候，通过交互式的提问可以更快了解一篇论文是否对自己的毕设有帮助。&lt;/li&gt;
&lt;li&gt;学会读摘要：&lt;ul&gt;
&lt;li&gt;背景是什么：与你的毕设题目是否相关&lt;/li&gt;
&lt;li&gt;过去的研究局限是什么：补充关于现有研究的知识，可能会启发思路&lt;/li&gt;
&lt;li&gt;该论文提出的解决方案是什么：对你的主题是否有启发&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对我来说：因为我的毕设本质是一个已有方案的优化问题，所以读文献花了很长时间。原因是需要了解：我的问题场景下已经有什么优化方法、是否有效、是否适用于已有方案。&lt;/p&gt;
&lt;h2 id=&quot;做实验&quot;&gt;&lt;a href=&quot;#做实验&quot; class=&quot;headerlink&quot; title=&quot;做实验&quot;&gt;&lt;/a&gt;做实验&lt;/h2&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://august0830.github.io/categories/Tech/"/>
    
    
    <category term="NJUCS" scheme="https://august0830.github.io/tags/NJUCS/"/>
    
  </entry>
  
  <entry>
    <title>实习就业分享</title>
    <link href="https://august0830.github.io/post/af204ca1/"/>
    <id>https://august0830.github.io/post/af204ca1/</id>
    <published>2023-05-16T02:25:24.000Z</published>
    <updated>2023-05-16T11:24:50.841Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;之前分享时间有限，文字稿整理了更多内容&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;我的背景&quot;&gt;&lt;a href=&quot;#我的背景&quot; class=&quot;headerlink&quot; title=&quot;我的背景&quot;&gt;&lt;/a&gt;我的背景&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;无亮眼绩点——40%上下浮动&lt;/li&gt;
&lt;li&gt;无竞赛——美赛只有一个水奖，没有ACM、花旗杯、大创&lt;/li&gt;
&lt;li&gt;进组经历——无 第一次接触科研是在毕设期间&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果把找实习找工作比做牌桌，我猜我的开局应该和大部分人都是比较相似的，希望大家到最后不会觉得“我做不到”，而是“听起来我也行”。&lt;/p&gt;
&lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;找实习和秋招春招的思路大致都是相似的。市场行情、你的期望等等因素都会有变化，所以对我来说授人以鱼不如授人以渔，对在座的各位来说，具有可成长的思维比照搬经验更重要。&lt;/p&gt;
&lt;p&gt;具有如下心态会对你的找工之旅有些帮助：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;忌刻舟求剑。和往年人对比是不现实的，因为这两年情况变化很快，和身边人对比也不是一个好主意，因为你们偏好的职业路径、面对的机会与挑战不尽相同。把别人当成参照物会徒增自我怀疑。如果羡慕别人的offer的话，把别人当成可以对齐模仿的案例才是成长性的思维。&lt;/li&gt;
&lt;li&gt;不要把面试结果当成是一种评判（Judgement），而应该是一种反馈（Feedback）面试是否能通过取决于很多因素，比如面试的部门是否急需人，你们气场是否相合。评判可能是一种噪音，但是反馈是应当是有利于你调整的信号。每一次面试都可以学到东西，不管是面试技巧上的、技术上的还是对行业的理解上。&lt;/li&gt;
&lt;li&gt;抓住每一次机会，不要等到做好准备。很多时候大家可能会觉得自己没准备好或者不足以去投一些看起来很高大上的大厂。但是不投怎么知道自己没机会呢？而且投简历和面试是一件投入极小但是回报极大的事情，大不了当别人免费给你做面试训练。看到内推就大胆去问、看到岗位招聘就尝试去投，来了面试就面。适应面试套路需要时间，尝试的越多，在机会来临的时候就越有机会抓住。 &lt;/li&gt;
&lt;li&gt;资源是有限的，需要权衡取舍。很多公司只允许你投递有限数量的岗位，或者是有优先级顺序；你自己的时间精力也是有限的。勇气不等于莽撞，在争取之前，需要确认自己是否真的愿意为此下注。这需要你了解你面对的机会能打开怎样的大门，以及你自己想要什么。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;写简历-投递&quot;&gt;&lt;a href=&quot;#写简历-投递&quot; class=&quot;headerlink&quot; title=&quot;写简历+投递&quot;&gt;&lt;/a&gt;写简历+投递&lt;/h1&gt;&lt;p&gt;写简历是了解自己的过程，投递是了解市场行情的过程。&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://august0830.github.io/categories/Tech/"/>
    
    
    <category term="Interview" scheme="https://august0830.github.io/tags/Interview/"/>
    
    <category term="Career" scheme="https://august0830.github.io/tags/Career/"/>
    
  </entry>
  
  <entry>
    <title>DP IS EASY —— 如何切入动态规划问题</title>
    <link href="https://august0830.github.io/post/70b45bc3/"/>
    <id>https://august0830.github.io/post/70b45bc3/</id>
    <published>2023-04-22T13:57:41.000Z</published>
    <updated>2023-04-22T14:02:55.491Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;是对&lt;a href=&quot;https://leetcode.com/problems/target-sum/solutions/455024/DP-IS-EASY!-5-Steps-to-Think-Through-DP-Questions&quot;&gt;DP-IS-EASY!-5-Steps-to-Think-Through-DP-Questions&lt;/a&gt;的翻译记录，原题是 &lt;a href=&quot;https://leetcode.cn/problems/target-sum/solution/DP-IS-EASY/?utm_source=LCUS&amp;utm_medium=ip_redirect&amp;utm_campaign=transfer2china&quot;&gt;Target Sum（目标和）&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;DP很容易！5步思考DP问题&quot;&gt;&lt;a href=&quot;#DP很容易！5步思考DP问题&quot; class=&quot;headerlink&quot; title=&quot;DP很容易！5步思考DP问题&quot;&gt;&lt;/a&gt;DP很容易！5步思考DP问题&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：这不是一个规范化、完美优化的DP解决方案。我们已经有足够多这样的东西了。这篇文章将带领你了解动态规划背后的思考过程，让你能够自己解决这些问题。&lt;/p&gt;
&lt;h3 id=&quot;类别&quot;&gt;&lt;a href=&quot;#类别&quot; class=&quot;headerlink&quot; title=&quot;类别&quot;&gt;&lt;/a&gt;类别&lt;/h3&gt;&lt;p&gt;大多数动态规划问题可以归结为几个类别。识别类别很重要，因为它允许我们将一个新问题转化成我们已知的问题。转化意味着使用框架，而不是将另一个问题的解决方法复制到当前问题中。你必须明白每个DP问题都是不同的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问题&lt;/strong&gt;：在继续之前将此问题标识为以下类别之一。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0/1背包&lt;/li&gt;
&lt;li&gt;无界背包&lt;/li&gt;
&lt;li&gt;最短路径（例如：独特的路径I/II）&lt;/li&gt;
&lt;li&gt;斐波那契数列（例如：房子小偷，跳跃游戏）&lt;/li&gt;
&lt;li&gt;最长公共子串/子序列&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;答案&lt;/strong&gt;：0/1背包&lt;/p&gt;
&lt;p&gt;为什么是0/1背包？我们的“容量”是我们想达到的目标“S”。我们的“物品”是输入子集中的数字，物品的“重量”是数字本身的值。这个问题遵循0/1背包而不是无界背包，因为我们只能使用每个数字一次。&lt;/p&gt;
&lt;p&gt;变化是什么？这个问题与标准背包问题的变化在于，我们必须将子集中的所有物品添加到我们的背包中。我们可以将问题重新构成为将当前数字的正值或负值添加到我们的背包中，以达到目标容量“S”。&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://august0830.github.io/categories/Tech/"/>
    
    
    <category term="Algo" scheme="https://august0830.github.io/tags/Algo/"/>
    
  </entry>
  
  <entry>
    <title>从零开始写简历</title>
    <link href="https://august0830.github.io/post/cbfb1047/"/>
    <id>https://august0830.github.io/post/cbfb1047/</id>
    <published>2023-03-22T12:57:15.000Z</published>
    <updated>2023-03-23T06:56:39.379Z</updated>
    
    
    <summary type="html">&lt;p&gt;这里的从零是字面意思，不管是刚开始找实习的同学，还是因为考研不幸落榜匆忙投入春招的同学，这篇文章是为之前完全没有写过简历的你准备的！&lt;/p&gt;
&lt;p&gt;这一篇是对我实习经验分享中写简历部分的具体拓展，对其他内容感兴趣也可以&lt;a href=&quot;https://njucs.top/internet_company_pratice/&quot;&gt;移步&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;前期准备——拉清单&quot;&gt;&lt;a href=&quot;#前期准备——拉清单&quot; class=&quot;headerlink&quot; title=&quot;前期准备——拉清单&quot;&gt;&lt;/a&gt;前期准备——拉清单&lt;/h2&gt;&lt;p&gt;清单内容如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有专业相关课程&lt;ul&gt;
&lt;li&gt;不管你认为有多水都要写出来&lt;/li&gt;
&lt;li&gt;有项目/课设/代码的课程要把代码和实验报告找到；整理好上传到Github/博客上，之后根据简历排布情况置顶重要项目的仓库&lt;/li&gt;
&lt;li&gt;如果没有代码等材料，尽量回忆课程主要内容，列出大纲&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;所有专业相关活动&lt;ul&gt;
&lt;li&gt;大创、技术社团活动、数模比赛、美赛等&lt;/li&gt;
&lt;li&gt;专业内容弱相关的活动可以记下来，只是写进简历的优先级比上述略低&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;考过的证书&lt;ul&gt;
&lt;li&gt;四六级成绩证明，雅思托福（如果有）&lt;/li&gt;
&lt;li&gt;或者你认为能体现你能力的其他证书&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;开始动笔&quot;&gt;&lt;a href=&quot;#开始动笔&quot; class=&quot;headerlink&quot; title=&quot;开始动笔&quot;&gt;&lt;/a&gt;开始动笔&lt;/h2&gt;&lt;p&gt;先来看一份来自CMU的简历&lt;/p&gt;
&lt;img src=&quot;/post/cbfb1047/image-20230322211658324.png&quot; class title=&quot;image-20230322211658324&quot;&gt;

&lt;p&gt;是不是看起来很简洁很干货？我原来用的工具现在有人反映总是会泄露个人隐私，就不推荐了。可以使用Overleaf或者自行查找类似模板。&lt;/p&gt;
&lt;p&gt;好的，现在让我们来写简历，争取像上述简历一样一页写完 (*^_^*)&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://august0830.github.io/categories/Tech/"/>
    
    
    <category term="Interview" scheme="https://august0830.github.io/tags/Interview/"/>
    
  </entry>
  
  <entry>
    <title>与Chatgpt二三事二三思</title>
    <link href="https://august0830.github.io/post/6a1e4dd7/"/>
    <id>https://august0830.github.io/post/6a1e4dd7/</id>
    <published>2023-03-08T02:49:08.000Z</published>
    <updated>2023-03-12T03:46:20.929Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Chatgpt会威胁人类吗&quot;&gt;&lt;a href=&quot;#Chatgpt会威胁人类吗&quot; class=&quot;headerlink&quot; title=&quot;Chatgpt会威胁人类吗&quot;&gt;&lt;/a&gt;Chatgpt会威胁人类吗&lt;/h2&gt;&lt;p&gt;大概会威胁到脑子空空的人。&lt;/p&gt;
&lt;p&gt;最早注意到Chatgpt是在豆瓣看到一个测试它的&lt;a href=&quot;https://www.douban.com/group/topic/279710957/?_i=785876838f16251&quot;&gt;帖子&lt;/a&gt;。当时我对帖子里“AI具有鉴赏、哲学思考的可能性从而让人感到威胁”的观点有所不同意。在我的一番“抬杠”下，我发现Chatgpt会从提问里学习提问者的话术再生成回答（也许是In-context learning的一种表现？），因此提问者实际上是被自己的才华惊讶而非Chatgpt。而且仔细推敲，Chatgpt的答案实际上欠缺逻辑，也欠缺事实，信息量有限。&lt;/p&gt;
&lt;p&gt;因此，我当时对Chatgpt的判断是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一只人类友好的学舌鹦鹉，在处理文书、工作邮件等有模版需要填内容的文件表现优异&lt;/li&gt;
&lt;li&gt;只靠Chatgpt，是没有逻辑和信息量的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;人一直认为创造力是人的独有，所以人们能用Chatgpt创作小说的时候，不免又有惊恐的声音出现。但是Chatgpt更像是一个初步的索引。比如让写小说大纲，它能洋洋洒洒写出一篇。然而创作大纲本身有规律可循，网上也有不少教程总结过。Chatgpt学习了这部分语料而人没有学习就会让人觉得不明觉厉。但是对于精于创作的人（或者比较挑剔的人）来说，大纲就只是大纲，缺乏更多细节。&lt;/p&gt;
&lt;p&gt;综上，我认为该感到恐慌的人，是所书写的文字材料本身就是套话空话，信息量少的类型。还有一群人，或许不恐慌，但是需要小心被新时代人工智能的洪水淹没的可能———没有办法判断别人话语里逻辑和事实的人，也许很容易被Chatgpt给忽悠了。&lt;/p&gt;
&lt;p&gt;逻辑、理性和创造力，或许始终是人类的诺亚方舟。&lt;/p&gt;
&lt;h2 id=&quot;Chatgpt是生产力新突破吗&quot;&gt;&lt;a href=&quot;#Chatgpt是生产力新突破吗&quot; class=&quot;headerlink&quot; title=&quot;Chatgpt是生产力新突破吗&quot;&gt;&lt;/a&gt;Chatgpt是生产力新突破吗&lt;/h2&gt;&lt;p&gt;可以是，取决于科技巨头和开发者们能多大程度弥补Chatgpt的缺陷并创造更多的可能性。&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://august0830.github.io/categories/Tech/"/>
    
    
    <category term="Chatgpt" scheme="https://august0830.github.io/tags/Chatgpt/"/>
    
  </entry>
  
  <entry>
    <title>怨种23届本科生秋招实录</title>
    <link href="https://august0830.github.io/post/d5aef8f3/"/>
    <id>https://august0830.github.io/post/d5aef8f3/</id>
    <published>2023-01-09T07:30:30.000Z</published>
    <updated>2023-01-09T16:07:55.621Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;我的背景&quot;&gt;&lt;a href=&quot;#我的背景&quot; class=&quot;headerlink&quot; title=&quot;我的背景&quot;&gt;&lt;/a&gt;我的背景&lt;/h4&gt;&lt;p&gt;本科CS科班，无竞赛无比赛绩点在中游保研边缘，简历上主要是偏后端底层的课设，有一段4个月字节iOS客户端实习经历，秋招开始的时候在微软暑期实习，做的后端相关，时长3个月。&lt;/p&gt;
&lt;h4 id=&quot;Offer情况和时间线&quot;&gt;&lt;a href=&quot;#Offer情况和时间线&quot; class=&quot;headerlink&quot; title=&quot;Offer情况和时间线&quot;&gt;&lt;/a&gt;Offer情况和时间线&lt;/h4&gt;&lt;p&gt;7月底暑期实习期间就开始同步秋招，在9月份初拿到了宁德时代的offer，因为薪资不满意+觉得秋招还有机会拒了，9月中旬拿到了Thoughtworks年包税前不到20w的offer，之后屡战屡挂，10月中下旬进了菊花厂大鱼池，微软暑期转正最终因为没有hc在11月被挂了，12月初侥幸被捞上岸拿到了阿里后端年包40w的offer&lt;/p&gt;
&lt;p&gt;面试了大概30+场，笔试次数大概不相上下，面过的企业包括国内外科技大厂，国内外金融机构，新能源/汽车/传统行业也有涉及。&lt;/p&gt;
&lt;p&gt;插播一个地狱笑话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我一位在大厂实习过的朋友有一次神神秘秘的说自己和HR聊天得到了一个行业内幕。让ta讲的时候，ta先问了我一个问题：假如你是一个小团队的leader，如果你想了解竞争对手类似部门的组织架构，你会怎么办呢？&lt;/p&gt;
&lt;p&gt;我说，我会让HR或者猎头挖竞争对手同类部门的大头兵或是senior程序员的墙脚，面试的时候提问我想要知道的问题。我朋友接着问：可是你们部门没hc怎么办？我说那就在最后一轮或者HR面提高面试难度挂掉对方。我朋友大惊，说你怎么知道HR就是这样说的。&lt;/p&gt;
&lt;p&gt;那会我还在秋招中挣扎，我只能苦笑说这都是我被疯狂捞起涮面试KPI养成的直觉。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;今年情况并不乐观，失败是家常便饭，但是失败不意味着结束，每一次面试都能让我更熟悉招聘的套路，也更熟悉我的优势和缺点，让我明确我不能接受怎样的企业风格。只有不怕失败才能不断的去尝试，修正、确认自己的策略。&lt;/p&gt;
&lt;h2 id=&quot;我稳住求职季心态苟到最后年包翻番的tips：&quot;&gt;&lt;a href=&quot;#我稳住求职季心态苟到最后年包翻番的tips：&quot; class=&quot;headerlink&quot; title=&quot;我稳住求职季心态苟到最后年包翻番的tips：&quot;&gt;&lt;/a&gt;我稳住求职季心态苟到最后年包翻番的tips：&lt;/h2&gt;&lt;h3 id=&quot;第一目标是不失业&quot;&gt;&lt;a href=&quot;#第一目标是不失业&quot; class=&quot;headerlink&quot; title=&quot;第一目标是不失业&quot;&gt;&lt;/a&gt;第一目标是不失业&lt;/h3&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://august0830.github.io/categories/Tech/"/>
    
    
    <category term="Interview" scheme="https://august0830.github.io/tags/Interview/"/>
    
    <category term="Career" scheme="https://august0830.github.io/tags/Career/"/>
    
  </entry>
  
  <entry>
    <title>碎片时间学英语-程序员的口语练习</title>
    <link href="https://august0830.github.io/post/4250e502/"/>
    <id>https://august0830.github.io/post/4250e502/</id>
    <published>2022-12-03T13:40:16.000Z</published>
    <updated>2023-01-09T15:54:58.622Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;我经历过的英语面试&quot;&gt;&lt;a href=&quot;#我经历过的英语面试&quot; class=&quot;headerlink&quot; title=&quot;我经历过的英语面试&quot;&gt;&lt;/a&gt;我经历过的英语面试&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;面试&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;微软暑期实习二面&lt;/td&gt;
&lt;td&gt;英文自我介绍 回答了面试官的追问&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Morgan Stanley 电话简历面&lt;/td&gt;
&lt;td&gt;简单Java八股，通过本场面试&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Morgan Stanley 3轮技术面试&lt;/td&gt;
&lt;td&gt;算法题+技术问题 磕磕绊绊解释思路&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TikTok Singapore 技术面+HR面&lt;/td&gt;
&lt;td&gt;3场技术面中有一半时间用英文介绍项目，解算法题，回答追问，进行反问；HR面全程用英语回答问题表达诉求&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;以上所有面试并除了Morgan Stanley因为技术问题没回答好挂了之外其他都通过了面试本身。英文的技术面试重点依旧是技术，但是经过我的练习，我至少可以做到尽可能减少表达不流畅带来的负面影响。&lt;/p&gt;
&lt;p&gt;我训练的主要目标是提升表达的流畅度，对口语的口音没有太多要求。&lt;/p&gt;
&lt;h2 id=&quot;碎片时间利用的方法&quot;&gt;&lt;a href=&quot;#碎片时间利用的方法&quot; class=&quot;headerlink&quot; title=&quot;碎片时间利用的方法&quot;&gt;&lt;/a&gt;碎片时间利用的方法&lt;/h2&gt;&lt;h3 id=&quot;英语刷算法题&quot;&gt;&lt;a href=&quot;#英语刷算法题&quot; class=&quot;headerlink&quot; title=&quot;英语刷算法题&quot;&gt;&lt;/a&gt;英语刷算法题&lt;/h3&gt;&lt;p&gt;英文面试中手撕算法题的关键依旧是讲清楚算法题，只不过多了一个附加条件——用英语。我在原来写自己的题解、梳理思路的基础上只是替换了语言。先保证自己能用中文清晰的写出算法题思路和需要注意的要点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;做英语算法题，看英语题解，用英文关键词搜索&lt;/strong&gt; 尽可能营造沉浸式环境，同时减少对英语的陌生感和恐惧感，避免看到英语算法题就头晕。还可以学习相关术语。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;大胆写 不需要在意语法 是Broken English也没关系&lt;/strong&gt; 如果一开始觉得直接说很困难可以先写出来，作为缓冲。写的时候可以不在意语法，不一定要是完整的句子，把要点写出来，再考虑连起来。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;模仿学习矫正是必须要下的功夫&lt;/strong&gt; 参考母语者是如何讲题的可以帮助自己修正讲题的方式。我参考的是&lt;a href=&quot;%5BNeetcode%5D(https://neetcode.io/)&quot;&gt;NeetCode&lt;/a&gt;。他擅长用样例讲解算法，并且用语非常基础，易于模仿。在学习模仿的过程中也可以积累常用的讲解算法题的表达。&lt;/p&gt;</summary>
    
    
    
    <category term="Language Learning" scheme="https://august0830.github.io/categories/Language-Learning/"/>
    
    
    <category term="Owl at Dusk" scheme="https://august0830.github.io/tags/Owl-at-Dusk/"/>
    
  </entry>
  
  <entry>
    <title>2021春季学期小结</title>
    <link href="https://august0830.github.io/post/bb9e0ca7/"/>
    <id>https://august0830.github.io/post/bb9e0ca7/</id>
    <published>2022-12-03T13:33:03.000Z</published>
    <updated>2022-12-03T13:36:39.118Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;整理文件的时候发现于是发出来 其实是一个补档&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;考完试了来回顾一下这一个学期我都在干什么。&lt;/p&gt;
&lt;p&gt;考试周的时候感到非常空虚，总是沉迷于阈值很高的娱乐而无所事事，经过一段时间才能调整适应并没有ddl追着打的日子。但是转念一想，在一个学期被ddl追着打的日子里，我又有什么收获呢? 乍一想好像还真没有。&lt;/p&gt;
&lt;p&gt;翻开我的日程本，刚开学的三月份过的还是相当忙碌的。寒假结束了STEP项目的申请（失败）和美赛，马不停蹄的又开始参加shopee的比赛以及准备gsoc。&lt;/p&gt;
&lt;p&gt;shopee的比赛纯属被大佬带飞，我也认识到自己并不适合短时间突击某个技术模块，厚积薄发才是王道。（尤其是在美赛结果出来以后更是印证了这一点）。&lt;/p&gt;
&lt;p&gt;gsoc虽然最终落选，但是在准备的过程中啃了一篇论文以及工程级别的源代码，认识到做研究和做工业的不同。做研究需要独创性，并且需要证明自己的方法有效，至于代码实现，只是作为证明的一部分。同时打破心理舒适区，拓展了一下自己的能力边界，看懂全英文的论文，搞明白代码的互相依赖关系并不是不可能的！&lt;/p&gt;
&lt;p&gt;之后就是连着的面试。STEP的惨痛教训另外写过。面腾讯和微软的时候基础知识和算法不够扎实，不出意外的挂了。5月份学期快结束的时候，面字节因为对方不愿意收大二的也挂了。还有一个量化的岗位因为时间不合适我被我拒了面试机会。通过一连串的面试，虽然没有获得996的机会&lt;del&gt;（不是&lt;/del&gt;，但是多少了解了自己的不足以及接下来弥补的方向。同时在这期间，学会了如何大胆的请教前辈以及利用connection争取机会。&lt;/p&gt;
&lt;p&gt;另外有一个NUS的summer camp出于财务问题被我残忍拒绝了。经此一役确认接下来留学的打算估计要推到自己攒够钱之后了。家里能够提供的支持是有限的，我也不忍心再让父母掏钱。&lt;/p&gt;
&lt;p&gt;获得这样的结果我并不意外，并不能算是有顶级天赋又没有下定决心狠狠努力的我显然并不能苛求太多。从另一个角度说，失败是成功的逆位，通过排除自己目前不能做到什么，可以为接下来的假期敲响警钟。&lt;/p&gt;
&lt;p&gt;课外活动的丰富尝（shi）试（bai）来源于上个学期无所事事的教训。但是在课外也一无所成的情况下，似乎乍一看是没有任何收获的。这可能是源于我高中一贯以来的思维：大家都做了就等于都没做。但是显然，在有限的时间内，课内的实践也应当成为宝贵的经历。至少在努力过后要有所提炼，有所感悟。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Owl at Dusk" scheme="https://august0830.github.io/tags/Owl-at-Dusk/"/>
    
  </entry>
  
  <entry>
    <title>碎片时间学英语——日常阅读</title>
    <link href="https://august0830.github.io/post/cda728a4/"/>
    <id>https://august0830.github.io/post/cda728a4/</id>
    <published>2022-11-21T14:35:29.000Z</published>
    <updated>2023-01-09T15:56:09.441Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;em&gt;原文是我外刊时文共读的作业，但是我认为这门课让我学到的东西可以拓展写一下，于是改写成了这篇文章。关于碎片化学习英语，应该会写一个系列，覆盖近一年来关于听说读写这四个方面我的练习。&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;Intro&quot;&gt;&lt;a href=&quot;#Intro&quot; class=&quot;headerlink&quot; title=&quot;Intro&quot;&gt;&lt;/a&gt;Intro&lt;/h2&gt;&lt;p&gt;过去的三年时间里，除了大一还有英语必修课使我能在繁忙的专业课程之余专门留出时间给英语学习，我总是很难在专业课夹击中找到如上大学之前那样集中学习英语的时间，连四六级英语考试都是匆忙上阵的。&lt;/p&gt;
&lt;p&gt;系统有意识的学习英语多半是在课堂上：有专门主题的教材，有系统的笔记，有及时的作业和反馈。这并不是说我在平常不会接触、练习、使用英语；但是与课堂相比，总是缺少刻意练习和记录，因此我总是把系统、刻意练习的期待寄托在完整的、可以像课堂一样的时间段，寄希望于教材这样系统的学习材料。但是实际上，这是一种会阻碍我前进的“完美主义”。&lt;strong&gt;学习任何事情都不需要等到一切就绪&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&quot;Learning-in-Pieces&quot;&gt;&lt;a href=&quot;#Learning-in-Pieces&quot; class=&quot;headerlink&quot; title=&quot;Learning in Pieces&quot;&gt;&lt;/a&gt;Learning in Pieces&lt;/h2&gt;&lt;p&gt;语言原本就是思想的载体，是交流的工具；我所学习、所练习的一切，原本就是为了更好的倾听他人的观点，表达我的想法。因此即便是对不同主题，基于不同体裁看似零散的练习，也总是有相通的地方；而能从多种多样的文章中找到共同的部分——比如国际顶尖媒体写作者都是怎样导入，怎样吸引读者注意，引起读者思考——也同样是一种能力。对于我这样有阅读英语原文——包括新闻和技术文章——的习惯的人来说，实际上每一篇文章都是一次学习的好机会。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;饭是一口口吃的，但是每一口吃什么，可以根据此时此地的情况定制。&lt;/strong&gt;读什么样的文章，读文章的时候注意什么，都可以通过不同的选择来激发自己的学习兴趣。比如对同一篇文章，可以着重积累词汇，也可以学习作者安排文章结构的方式，或是观察作者如何导入一个主题、事件、专业名词；或者对不同的文章，采取不同的策略。对于略读的文章，可以扫几眼概览架构；对于精读的文章，可以掏出小本本记单词分析句子。总之可以灵活安排，就可以一定程度上减少“等我有时间再做”这样的无效flag。&lt;/p&gt;
&lt;p&gt;我时常会有阅读专业相关的英语博客的时候，这种时候除了注意专业知识，我还可以积累一些常用专业术语的表达，并且观察写作者是如何让文章保持简明易懂的。而对于商业、时事新闻，我可以多积累一些常用名词，以及一些通俗搭配，了解一些文化背景知识。&lt;/p&gt;
&lt;h2 id=&quot;Make-some-Output&quot;&gt;&lt;a href=&quot;#Make-some-Output&quot; class=&quot;headerlink&quot; title=&quot;Make some Output&quot;&gt;&lt;/a&gt;Make some Output&lt;/h2&gt;&lt;p&gt;上外刊课程的时候，系统整理好的笔记和选择题答题记录是作业的一部分。不过这也倒逼了我输出笔记。输出倒逼输入的好处就不再赘述了，个人觉得还是非常大程度的避免我偷懒or忘记学到的东西了。&lt;/p&gt;</summary>
    
    
    
    <category term="Language Learning" scheme="https://august0830.github.io/categories/Language-Learning/"/>
    
    
    <category term="Owl at Dusk" scheme="https://august0830.github.io/tags/Owl-at-Dusk/"/>
    
  </entry>
  
  <entry>
    <title>微软实习小结</title>
    <link href="https://august0830.github.io/post/6f29a5ac/"/>
    <id>https://august0830.github.io/post/6f29a5ac/</id>
    <published>2022-11-16T16:10:42.000Z</published>
    <updated>2022-11-16T16:15:48.513Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;实习经历&quot;&gt;&lt;a href=&quot;#实习经历&quot; class=&quot;headerlink&quot; title=&quot;实习经历&quot;&gt;&lt;/a&gt;实习经历&lt;/h2&gt;&lt;p&gt;实习开始前有一个有意思的小插曲，我申请过一次换组。微软暑期实习分组和项目本身是开盲盒，算法分到开发的也大有人在。可能是因为我上一段实习主要做客户端开发的工作，最开始发邮件给我分到的组主要是做前端的。于是我发邮件问组里有没有后端的项目能让我去做，对方虽然答复我说组里主要做前端没有后端项目，但是愿意帮我去向大老板申请能不能给我换组。于是后来我成功换到了我后来实习的组。我的manager也知道我想要做后端于是让我的mentor给我安排了相关的任务。&lt;/p&gt;
&lt;p&gt;我得到的经验是还是需要尽力去争取，说不定就成了呢。这件事还给我的manager留下了我”明确知道自己喜欢什么并且勇于争取“的印象。算是一种肯定（？）&lt;/p&gt;
&lt;p&gt;我们组是一个新组，文档有，但是要么基于其他组，要么不够完善，所以基本只能看个大概有所了解。更直接的方式是问mentor和同事们，比如我在第一天参加站会的时候就请大家介绍了一下组里在做的产品，有了个大概的认识。可以说作为新人，我是在和大家一起成长的。但好在同事之间非常欢迎互助，不止一个不是我mentor的同事鼓励我多多提问。&lt;/p&gt;
&lt;p&gt;对于有点自闭社恐的人来说，还有一个了解组里技术背景的方式是站会。一个能对新人暴露足够多信息的站会在我看来需要包括以下要素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个人需要提到自己的block和进度，详细到技术名词&lt;/li&gt;
&lt;li&gt;谈到自己的任务的时候会提及上下文，即任务的上下游部门是哪些，采用了什么技术，达成什么目标，正在与谁协作&lt;/li&gt;
&lt;li&gt;提到的技术工具 组里有文档或者群聊记录有提及&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我重构信息的方式是，先不求甚解，尝试通过大家讨论block的时候的信息在脑子里画一个依赖图，对于能查到文档的或我自己的项目也用到的技术，去看看文档；听到新的技术名词的时候问问自己，猜想这是用来解决什么问题的，必要的时候直接问。经过大概两周的时间，我就能描述出组里做什么，每个同事做什么模块。这对定向求助以及理解自己在组里的位置非常有帮助。&lt;/p&gt;
&lt;p&gt;组里主要是基于Scrum流程来安排工作的。除了每天的站会之外。每周会有一些固定会议，大家一起讨论当前遇到的问题，基于Azure DevOps看板盘点当前大家的任务进度并分配新的任务；还会安排专门的knowledge sharing和happy hour供大家交流学习和团建。&lt;/p&gt;
&lt;p&gt;和学校里非常不同，工作当中沟通讨论的时间和写代码的时间可以说是对半。写代码的时候为了写代码而准备的时间有时候又比写代码本身要长。所以，写代码很重要，但是不是工作的全部。&lt;/p&gt;
&lt;h2 id=&quot;个人成长&quot;&gt;&lt;a href=&quot;#个人成长&quot; class=&quot;headerlink&quot; title=&quot;个人成长&quot;&gt;&lt;/a&gt;个人成长&lt;/h2&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://august0830.github.io/categories/Tech/"/>
    
    
    <category term="Career" scheme="https://august0830.github.io/tags/Career/"/>
    
  </entry>
  
  <entry>
    <title>AW10-Final-Full-Reactive-MicroPos</title>
    <link href="https://august0830.github.io/post/d29cc919/"/>
    <id>https://august0830.github.io/post/d29cc919/</id>
    <published>2022-07-05T01:17:30.000Z</published>
    <updated>2022-08-02T00:54:23.717Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Not-Finished-Yet-in-Previous-AW&quot;&gt;&lt;a href=&quot;#Not-Finished-Yet-in-Previous-AW&quot; class=&quot;headerlink&quot; title=&quot;Not Finished Yet in Previous AW&quot;&gt;&lt;/a&gt;Not Finished Yet in Previous AW&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;choose product and checkout; use message&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;big collection of goods: extract and save in the repos——patch &lt;a href=&quot;https://github.com/sawork-2022/aw06-August0830&quot;&gt;aw06&lt;/a&gt; products use h2db? 修改pos-product&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;test case &lt;a href=&quot;https://github.com/sa-spring/spring-webflux&quot;&gt;sa-spring/spring-webflux&lt;/a&gt;测试用例可以写成mvn项目&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;记得恢复各地的eureka enable 其中cart需要在serviceimpl里恢复loadbalance yml文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;cart传输的数据需要修改&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Guideline-to-my-Micropos&quot;&gt;&lt;a href=&quot;#Guideline-to-my-Micropos&quot; class=&quot;headerlink&quot; title=&quot;Guideline to my Micropos&quot;&gt;&lt;/a&gt;Guideline to my Micropos&lt;/h2&gt;&lt;p&gt;启动gateway 可以通过&lt;a href=&quot;http://localhost:2222/%E6%9D%A5%E8%AE%BF%E9%97%AEMicropos%EF%BC%8C%E5%85%B6%E4%B8%AD%E5%90%8E%E7%BC%80%E6%B7%BB%E5%8A%A0product%EF%BC%8Ccarts%EF%BC%8Corder%EF%BC%8Cdelivery%E8%AE%BF%E9%97%AE%E5%AF%B9%E5%BA%94%E7%9A%84%E6%9C%8D%E5%8A%A1%E3%80%82%E4%B9%9F%E5%8F%AF%E4%BB%A5%E5%AF%B9%E5%90%84%E8%87%AA%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%8D%95%E7%8B%AC%E8%B0%83%E8%AF%95&quot;&gt;http://localhost:2222/来访问Micropos，其中后缀添加product，carts，order，delivery访问对应的服务。也可以对各自的服务单独调试&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Obstacles&quot;&gt;&lt;a href=&quot;#Obstacles&quot; class=&quot;headerlink&quot; title=&quot;Obstacles&quot;&gt;&lt;/a&gt;Obstacles&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;迁移到windows下环境后delivery启动失败出现&lt;a href=&quot;https://stackoverflow.com/questions/65164809/error-creating-bean-with-name-org-springframework-cloud-netflix-eureka-server-e&quot;&gt;Unsatisfied dependency expressed through field ‘eurekaServerBootstrap’&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;类似问题 carts启动失败：&lt;a href=&quot;https://stackoverflow.com/questions/46878649/maven-compilation-issue-with-java-9&quot;&gt;查询后添加&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;I got the same error on java 11. Adding &lt;a href=&quot;https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api/2.2.11&quot;&gt;jaxb api&lt;/a&gt; dependency to the pom solved my issue&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</summary>
    
    
    
    <category term="Tech" scheme="https://august0830.github.io/categories/Tech/"/>
    
    
    <category term="NJUCS" scheme="https://august0830.github.io/tags/NJUCS/"/>
    
  </entry>
  
  <entry>
    <title>AW09-Reactive Version</title>
    <link href="https://august0830.github.io/post/f51e3ca2/"/>
    <id>https://august0830.github.io/post/f51e3ca2/</id>
    <published>2022-06-30T01:27:23.000Z</published>
    <updated>2022-08-02T00:56:48.130Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;Reference&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/sa-spring/employee-reactive&quot;&gt;sa-spring/employee-reactive&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;针对delivery系统先尝试&lt;/p&gt;
&lt;p&gt;EmployeeController 负责处理网页请求，返回的是用Mono或者Flux包装的数据结构&lt;/p&gt;
&lt;p&gt;webclient 不管处理怎样的请求 都会显示取两个请求来处理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EmployeeRepository/Employee 基础设施 &lt;ul&gt;
&lt;li&gt;repository是内存中 可以模仿之前某次作业里的持久化 或者改进时再做&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Simple version： 发送一个请求立刻传送 模拟高占时的计算任务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;OrderInfo（需要添加买家名字和地址 order调整时在做，暂定是）应该在order中 迁移；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stirng id    &lt;/li&gt;
&lt;li&gt;Items 信息（联调实现） &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DeliveryInfo pos-api 生成随机时长 显示在路上（log）最后告知已经送达 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;String 信息&lt;/li&gt;
&lt;li&gt;是否已经送达（？）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Todo&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;rabbitmq 配置&lt;/p&gt;
&lt;p&gt;stream来发送 在yml里配置 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;order创建好DeliveryDto再发送 才能用mapper 在order中订阅&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可以用web client来发送请求&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://august0830.github.io/categories/Tech/"/>
    
    
    <category term="NJUCS" scheme="https://august0830.github.io/tags/NJUCS/"/>
    
  </entry>
  
  <entry>
    <title>AW08 Spring Integration</title>
    <link href="https://august0830.github.io/post/3da399b2/"/>
    <id>https://august0830.github.io/post/3da399b2/</id>
    <published>2022-05-31T00:32:44.000Z</published>
    <updated>2022-08-02T00:54:52.611Z</updated>
    
    
    <summary type="html">&lt;p&gt;delivery变成integration&lt;/p&gt;
&lt;p&gt;大致思路：&lt;/p&gt;
&lt;p&gt;aw07中的delivery不再作为微服务的一部分（去掉discovery和gateway配置）&lt;/p&gt;
&lt;p&gt;pos-cart中添加发送消息的部分；发送的消息有load，字符串（与aw08样例中直接get不同）；添加接收&lt;/p&gt;
&lt;p&gt;pos-delivery 保持不变&lt;/p&gt;
&lt;h2 id=&quot;Tech-Solution&quot;&gt;&lt;a href=&quot;#Tech-Solution&quot; class=&quot;headerlink&quot; title=&quot;Tech Solution&quot;&gt;&lt;/a&gt;Tech Solution&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;pos-order&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;替换成改写demo中的inbound/outbound&lt;/p&gt;
&lt;p&gt;inboud：处理发送来的post请求，提取string信息，调用placeOrder函数进行中间处理转换&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;inboundGateway(uri)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.requestMapping(r -&amp;gt; r.methods(Https.POST)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.consumes(&amp;quot;text/plain&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&amp;lt;String&amp;gt;handle((s)-&amp;gt; return placeOrder(s))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.requestPayloadType(String.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.get();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://august0830.github.io/categories/Tech/"/>
    
    
    <category term="NJUCS" scheme="https://august0830.github.io/tags/NJUCS/"/>
    
  </entry>
  
  <entry>
    <title>保研就业分享</title>
    <link href="https://august0830.github.io/post/e7143260/"/>
    <id>https://august0830.github.io/post/e7143260/</id>
    <published>2022-05-26T08:30:50.000Z</published>
    <updated>2022-08-02T01:07:48.053Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;就业分享&quot;&gt;&lt;a href=&quot;#就业分享&quot; class=&quot;headerlink&quot; title=&quot;就业分享&quot;&gt;&lt;/a&gt;就业分享&lt;/h2&gt;&lt;p&gt;认识自己 再去考虑工作的去向&lt;/p&gt;
&lt;p&gt;想是没有用的 去尝试才会知道&lt;/p&gt;
&lt;p&gt;大学期间 转型是代价相对小的&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/post/e7143260/image-20220526164234394-16594014462471.png&quot; alt=&quot;image-20220526164234394&quot;&gt;&lt;/p&gt;
&lt;p&gt;但是需要有一个标准&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/post/e7143260/image-20220526164413972.png&quot; alt=&quot;image-20220526164413972&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/post/e7143260/image-20220526164744117-16535548658031.png&quot; alt=&quot;image-20220526164744117&quot;&gt;&lt;/p&gt;
&lt;p&gt;技巧+实力 对问题有思考&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/post/e7143260/image-20220526164841788-16535549237082.png&quot; alt=&quot;image-20220526164841788&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://august0830.github.io/categories/Tech/"/>
    
    
    <category term="NJU" scheme="https://august0830.github.io/tags/NJU/"/>
    
  </entry>
  
  <entry>
    <title>AW07-Event Driven Architecture</title>
    <link href="https://august0830.github.io/post/8f0f1e10/"/>
    <id>https://august0830.github.io/post/8f0f1e10/</id>
    <published>2022-05-14T07:18:13.000Z</published>
    <updated>2023-01-09T15:51:53.751Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://spring.io/projects/spring-cloud-stream&quot;&gt;https://spring.io/projects/spring-cloud-stream&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/sa-spring/stream-loan&quot;&gt;https://github.com/sa-spring/stream-loan&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://piotrminkowski.com/2020/06/05/introduction-to-event-driven-microservices-with-spring-cloud-stream/&quot;&gt;https://piotrminkowski.com/2020/06/05/introduction-to-event-driven-microservices-with-spring-cloud-stream/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;调研&quot;&gt;&lt;a href=&quot;#调研&quot; class=&quot;headerlink&quot; title=&quot;调研&quot;&gt;&lt;/a&gt;调研&lt;/h1&gt;&lt;h3 id=&quot;开发&quot;&gt;&lt;a href=&quot;#开发&quot; class=&quot;headerlink&quot; title=&quot;开发&quot;&gt;&lt;/a&gt;开发&lt;/h3&gt;&lt;p&gt;添加orderService，配置好事件驱动&lt;/p&gt;
&lt;p&gt;source/发送者用的是supplier，连续的发送事件，但是我的期望设计是由特定事件驱动，需要用到streamBridge.&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-stream/blob/main/samples/confluent-schema-registry-integration/confluent-schema-registry-integration-producer1/src/main/java/sample/producer1/ConfluentAvroProducer1Application.java&quot;&gt;参考&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;处理者也可以返回消息，需要使用consumer&lt;a href=&quot;https://github.com/sa-spring/stream-loan/blob/main/loan-check/src/main/java/com/example/loan/check/LoanChecker.java&quot;&gt;参考&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;测试&lt;/p&gt;
&lt;p&gt;先测试事件驱动架构，在自动化生成请求的情况下；&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://august0830.github.io/categories/Tech/"/>
    
    
    <category term="NJUCS" scheme="https://august0830.github.io/tags/NJUCS/"/>
    
    <category term="Software Archetecture" scheme="https://august0830.github.io/tags/Software-Archetecture/"/>
    
  </entry>
  
  <entry>
    <title>字节iOS实习小结</title>
    <link href="https://august0830.github.io/post/67d81b79/"/>
    <id>https://august0830.github.io/post/67d81b79/</id>
    <published>2022-05-13T09:15:03.000Z</published>
    <updated>2022-08-02T00:44:48.471Z</updated>
    
    
    <summary type="html">&lt;p&gt;20220105-20220513 字节 iOS岗位实习&lt;/p&gt;
&lt;p&gt;借用KISS框架做一个简单小结&lt;/p&gt;
&lt;h2 id=&quot;Keep-需要保持的&quot;&gt;&lt;a href=&quot;#Keep-需要保持的&quot; class=&quot;headerlink&quot; title=&quot;Keep-需要保持的&quot;&gt;&lt;/a&gt;Keep-需要保持的&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;相信自己有解决问题的能力，遇到技术/业务上不懂的地方先尝试自己弄懂；&lt;/li&gt;
&lt;li&gt;学会提问，提问的时候介绍清楚背景和自己目前所做的努力；&lt;/li&gt;
&lt;li&gt;分隔开工作学习生活，保持完全投入和完全抽离。在工作时间段只想工作中的事情，其他时间段保存精力或者专心处理其他，忙碌的时候这一点尤为重要，可以减少不必要的内耗；&lt;/li&gt;
&lt;li&gt;留意工作中开发和学校中项目的不同，多反思多学习；&lt;/li&gt;
&lt;li&gt;从要跳槽/写简历的角度看待自己的工作；&lt;/li&gt;
&lt;li&gt;写代码的时候保持记录，写好文档；根据文档做代码收敛和优化；&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Improvement-需要改进的&quot;&gt;&lt;a href=&quot;#Improvement-需要改进的&quot; class=&quot;headerlink&quot; title=&quot;Improvement-需要改进的&quot;&gt;&lt;/a&gt;Improvement-需要改进的&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;写代码尽可能遵照调研-技术方案-开发-自检-代码说明的流程，让代码思路设计更加完备，简洁，符合规范；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;读原有代码的时候理解逻辑，做到和自己需求相关的闭包内容都了解清楚；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;沟通！沟通！沟通！无论是业务需求、技术问题还是代码规范，自己有了思路以后不要埋头苦干，多向mentor以及对接的同学进行确认；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Start-需要开始的&quot;&gt;&lt;a href=&quot;#Start-需要开始的&quot; class=&quot;headerlink&quot; title=&quot;Start-需要开始的&quot;&gt;&lt;/a&gt;Start-需要开始的&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;工作之余借当前项目进行技术钻研，多读代码&lt;/li&gt;
&lt;li&gt;在调研和写tech solution的阶段多咨询mentor&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Stop-需要停止的&quot;&gt;&lt;a href=&quot;#Stop-需要停止的&quot; class=&quot;headerlink&quot; title=&quot;Stop-需要停止的&quot;&gt;&lt;/a&gt;Stop-需要停止的&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;停止假设对接人是完美的，停止“非我职责”的想法，遇到问题多问多push&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://august0830.github.io/categories/Tech/"/>
    
    
    <category term="Career" scheme="https://august0830.github.io/tags/Career/"/>
    
  </entry>
  
  <entry>
    <title>Batch-AW06</title>
    <link href="https://august0830.github.io/post/27c8219b/"/>
    <id>https://august0830.github.io/post/27c8219b/</id>
    <published>2022-04-30T02:43:25.000Z</published>
    <updated>2022-05-05T15:11:16.860Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Task-to-do&quot;&gt;&lt;a href=&quot;#Task-to-do&quot; class=&quot;headerlink&quot; title=&quot;Task to do&quot;&gt;&lt;/a&gt;Task to do&lt;/h2&gt;&lt;p&gt;读样例代码+看课程其他讲解样例视频&lt;/p&gt;
&lt;p&gt;作业思路： 把aw04中的product来源换成batch任务写入的数据库&lt;/p&gt;
&lt;p&gt;aw04的数据结构可能需要重构 如product&lt;/p&gt;
&lt;p&gt;More： Faster！——Parallel！&lt;/p&gt;
&lt;h2 id=&quot;Read-Example-Code&quot;&gt;&lt;a href=&quot;#Read-Example-Code&quot; class=&quot;headerlink&quot; title=&quot;Read Example Code&quot;&gt;&lt;/a&gt;Read Example Code&lt;/h2&gt;&lt;h3 id=&quot;Service——batch流程工作流程用到的基本服务&quot;&gt;&lt;a href=&quot;#Service——batch流程工作流程用到的基本服务&quot; class=&quot;headerlink&quot; title=&quot;Service——batch流程工作流程用到的基本服务&quot;&gt;&lt;/a&gt;Service——batch流程工作流程用到的基本服务&lt;/h3&gt;&lt;p&gt;ItemReader，ItemProcessor，ItemWriter是模板，有类型参数可供自定义，可以通过重载自定义前后预处理的流程&lt;/p&gt;
&lt;h4 id=&quot;JsonFilerReader&quot;&gt;&lt;a href=&quot;#JsonFilerReader&quot; class=&quot;headerlink&quot; title=&quot;JsonFilerReader&quot;&gt;&lt;/a&gt;JsonFilerReader&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://fasterxml.github.io/jackson-databind/javadoc/2.7/com/fasterxml/jackson/databind/ObjectMapper.html&quot;&gt;ObjectMapper&lt;/a&gt;：json和Plain Old Java Object互相转换&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://fasterxml.github.io/jackson-databind/javadoc/2.8/com/fasterxml/jackson/databind/JsonNode.html&quot;&gt;JsonNode&lt;/a&gt;: json的数据被组织成树状，树的节点，样例中实现的ItemReader类型参数是JsonNode&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://august0830.github.io/categories/Tech/"/>
    
    
    <category term="NJUCS" scheme="https://august0830.github.io/tags/NJUCS/"/>
    
  </entry>
  
</feed>
